name: Deploy QuantScope App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      
      - name: Set up QEMU for multi-arch builds
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Create Buildx Builder
        run: docker buildx create --use

      - name: Build and Push Backend Image (Multi-Arch)
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 \
            -t aquibsayyed9/fixtool-quantscope-backend:latest \
            -t aquibsayyed9/fixtool-quantscope-backend:${{ github.sha }} \
            --push ./backend

      - name: Build and Push Frontend Image (Multi-Arch)
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 \
            -t aquibsayyed9/fixtool-quantscope-frontend:latest \
            -t aquibsayyed9/fixtool-quantscope-frontend:${{ github.sha }} \
            --push ./frontend

      - name: Deploy to Oracle VM
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.ORACLE_VM_IP }}
          username: ${{ secrets.ORACLE_VM_USER }}
          key: ${{ secrets.ORACLE_SSH_PRIVATE_KEY }}
          envs: DB_HOST,DB_NAME,DB_USER,DB_PASSWORD,DB_PORT
          script: |
            set -e  # Stop execution if any command fails

            echo "🚀 Starting deployment on Oracle VM..."

            cd /home/${{ secrets.ORACLE_VM_USER }}

            # Ensure the repository is cloned (shallow clone for efficiency)
            if [ ! -d "quantscope-repo" ]; then
              git clone --depth=1 https://github.com/aquibsayyed9/quantscope.git quantscope-repo
            else
              cd quantscope-repo
              git pull origin main
            fi

            # Ensure deployment folder exists
            if [ ! -d "/home/${{ secrets.ORACLE_VM_USER }}/quantscope-repo/deployment" ]; then
              echo "❌ Error: deployment folder not found in the repository!"
              exit 1
            fi

            cd /home/${{ secrets.ORACLE_VM_USER }}/quantscope-repo/deployment
            
            echo "📌 Creating .env file..."
            cat > .env << EOF
            DB_NAME="${{ secrets.DB_NAME }}"
            DB_USER="${{ secrets.DB_USER }}"
            DB_PASSWORD="${{ secrets.DB_PASSWORD }}"
            DB_PORT="${{ secrets.DB_PORT }}"
            EOF

            echo "✅ Environment file created successfully!"

            echo "🔄 Updating system packages..."
            sudo apt update && sudo apt install -y docker-compose docker-compose-plugin

            echo "📦 Pulling latest Docker images..."
            docker pull aquibsayyed9/fixtool-quantscope-backend:latest
            docker pull aquibsayyed9/fixtool-quantscope-frontend:latest

            echo "🛑 Stopping and removing existing containers..."
            docker compose down || echo "No running containers found."

            echo "🚀 Starting new deployment..."
            docker compose -f docker-compose.prod.yml --env-file .env up -d --force-recreate

            echo "✅ Deployment completed successfully!"
